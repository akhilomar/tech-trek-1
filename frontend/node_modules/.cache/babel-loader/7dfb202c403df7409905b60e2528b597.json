{"ast":null,"code":"var _jsxFileName = \"/home/akhil/tech-trek new/tech-trek/frontend/src/components/Login.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validation = (elm, msg) => {\n      this.setState(prevState => ({\n        errors: [...prevState.errors, {\n          elm,\n          msg\n        }]\n      }));\n    };\n\n    this.clearValidation = elm => {\n      this.setState(prevState => {\n        let newArr = [];\n\n        for (let err of prevState.errors) {\n          if (err.elm != elm) {\n            newArr.push(err);\n          }\n        }\n\n        return {\n          errors: newArr\n        };\n      });\n    };\n\n    this.onUsernameChange = e => {\n      this.setState({\n        username: e.target.value\n      });\n      this.clearValidation(\"username\");\n    };\n\n    this.onPasswordChange = e => {\n      this.setState({\n        password: e.target.value\n      });\n      this.clearValidation(\"password\");\n    };\n\n    this.submitLogin = e => {\n      if (this.state.username == \"\") {\n        this.validation(\"username\", \"Please enter username\");\n      }\n\n      if (this.state.password == \"\") {\n        this.validation(\"password\", \"Please enter password to verify security\");\n      }\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: []\n    };\n  }\n\n  render() {\n    let usernameErr = null,\n        passwordErr = null;\n\n    for (let err of this.state.errors) {\n      if (err.elm == \"username\") {\n        usernameErr = err.msg;\n      }\n\n      if (err.elm == \"password\") {\n        passwordErr = err.msg;\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: \"inner-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"div\", {\n      className: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      className: \"login-input\",\n      placeholder: \"Username\",\n      onChange: this.onUsernameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"small\", {\n      className: \"danger-error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, usernameErr ? usernameErr : \"\")), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      className: \"login-input\",\n      placeholder: \"Password\",\n      onChange: this.onPasswordChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"small\", {\n      className: \"danger-error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, passwordErr ? passwordErr : \"\")), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"login-btn\",\n      onClick: this.submitLogin.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Login\")));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/akhil/tech-trek new/tech-trek/frontend/src/components/Login.js"],"names":["React","Component","Login","constructor","props","validation","elm","msg","setState","prevState","errors","clearValidation","newArr","err","push","onUsernameChange","e","username","target","value","onPasswordChange","password","submitLogin","state","render","usernameErr","passwordErr","bind"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport './App.css';\n\nclass Login extends Component{\nconstructor(props){\n    super(props);\n    this.state={\n        username: \"\",\n        password: \"\",\n        errors: []\n    };\n}\nvalidation=(elm,msg)=>{\nthis.setState((prevState)=>({errors:[...prevState.errors,{elm,msg}]}));\n}\nclearValidation=(elm)=>{\n    this.setState((prevState)=>{\n        let newArr=[]\n        for(let err of prevState.errors)\n        {\n            if(err.elm!=elm)\n            {\n                newArr.push(err)\n            }\n        }\n        return {errors: newArr}\n    });\n}\nonUsernameChange=(e)=>{\n    this.setState({username: e.target.value});\n    this.clearValidation(\"username\");\n}\nonPasswordChange=(e)=>{\n    this.setState({password: e.target.value});\n    this.clearValidation(\"password\");\n}\nsubmitLogin=(e)=>{\n    if(this.state.username==\"\"){\n        this.validation(\"username\",\"Please enter username\")\n    }if(this.state.password==\"\"){\n        this.validation(\"password\",\"Please enter password to verify security\")\n    }\n\n}\n\nrender(){\n    let usernameErr=null, passwordErr=null;\n    for(let err of this.state.errors){\n        if(err.elm==\"username\"){\n            usernameErr=err.msg;\n        }if(err.elm==\"password\"){\n            passwordErr=err.msg;\n        }\n    }\n    return(\n    <div className=\"inner-container\">\n        <div className=\"header\">\n            Login\n        </div>\n        <div className=\"box\">\n            <div className=\"input-group\">\n                <label htmlFor=\"username\">Username</label>\n                <input type=\"text\" name=\"username\" className=\"login-input\" placeholder=\"Username\"\n                onChange={this.onUsernameChange}\n                />\n                 <small className=\"danger-error\">{usernameErr?usernameErr:\"\"}</small>\n            </div>\n\n            <div className=\"input-group\">\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" name=\"password\" className=\"login-input\" placeholder=\"Password\"\n                onChange={this.onPasswordChange}\n                />\n                 <small className=\"danger-error\">{passwordErr?passwordErr:\"\"}</small>\n            </div>\n            <button\n            type=\"button\"\n            className=\"login-btn\"\n            onClick={this\n            .submitLogin\n            .bind(this)}>Login</button>\n            </div>\n        </div>\n    \n    );\n        }\n    }\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}